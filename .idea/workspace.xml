<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CMakeRunConfigurationManager" shouldGenerate="true" shouldDeleteObsolete="true" buildAllGenerated="true">
    <generated>
      <config projectName="Project" targetName="output/gtest_test" />
      <config projectName="Project" targetName="gtest_main" />
      <config projectName="Project" targetName="gtest" />
      <config projectName="Project" targetName="mempool/output/TestMempool" />
      <config projectName="Project" targetName="threadpool/output/TestThreadpool" />
      <config projectName="Project" targetName="gmock" />
      <config projectName="Project" targetName="gmock_main" />
    </generated>
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration CONFIG_NAME="Debug" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="e20e0dee-9671-4e90-aa66-70dddfa7720f" name="Default" comment="">
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/3.8.2/CMakeDetermineCompilerABI_C.bin" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/3.8.2/CMakeDetermineCompilerABI_CXX.bin" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/3.8.2/CompilerIdC/a.out" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/3.8.2/CompilerIdCXX/a.out" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/feature_tests.bin" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/mempool/output/TestMempool.dir/mempool/example/TestMempool.cpp.o" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/output/gtest_test.dir/test/test.cpp.o" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/output/gtest_test.dir/test/unittest/gtest_test.cpp.o" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/threadpool/output/TestThreadpool.dir/threadpool/example/TestThreadpool.cpp.o" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.8.2/CMakeDetermineCompilerABI_C.bin" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.8.2/CMakeDetermineCompilerABI_CXX.bin" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/a.out" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/a.out" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/feature_tests.bin" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/output/gtest_test.dir/test/test.cpp.o" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/output/gtest_test.dir/test/unittest/gtest_test.cpp.o" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gtest/CMakeFiles/gtest.dir/src/gtest-all.cc.o" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gtest/CMakeFiles/gtest_main.dir/src/gtest_main.cc.o" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gtest/libgtest.a" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gtest/libgtest_main.a" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/CMakeFiles/googletest-complete" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/googletest-prefix/src/googletest-stamp/googletest-build" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/googletest-prefix/src/googletest-stamp/googletest-configure" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/googletest-prefix/src/googletest-stamp/googletest-done" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/googletest-prefix/src/googletest-stamp/googletest-download" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/googletest-prefix/src/googletest-stamp/googletest-install" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/googletest-prefix/src/googletest-stamp/googletest-mkdir" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/googletest-prefix/src/googletest-stamp/googletest-patch" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/googletest-prefix/src/googletest-stamp/googletest-test" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-src" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/CMakeFiles/3.8.2/CMakeDetermineCompilerABI_C.bin" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/CMakeFiles/3.8.2/CMakeDetermineCompilerABI_CXX.bin" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/CMakeFiles/3.8.2/CompilerIdC/a.out" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/CMakeFiles/3.8.2/CompilerIdCXX/a.out" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/CMakeFiles/feature_tests.bin" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CMakeFiles/gmock.dir/__/googletest/src/gtest-all.cc.o" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CMakeFiles/gmock.dir/src/gmock-all.cc.o" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CMakeFiles/gmock_main.dir/__/googletest/src/gtest-all.cc.o" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CMakeFiles/gmock_main.dir/src/gmock-all.cc.o" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CMakeFiles/gmock_main.dir/src/gmock_main.cc.o" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/build-aux/.keep" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gtest/CMakeFiles/gtest.dir/src/gtest-all.cc.o" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gtest/CMakeFiles/gtest_main.dir/src/gtest_main.cc.o" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gtest/libgtest.a" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gtest/libgtest_main.a" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/libgmock.a" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/libgmock_main.a" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/build-aux/.keep" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/workspace.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeCache.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/3.8.2/CMakeCCompiler.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/3.8.2/CMakeCXXCompiler.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/3.8.2/CMakeSystem.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/CMakeDirectoryInformation.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/CMakeOutput.log" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/Makefile.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/Makefile2" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/TargetDirectories.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/clion-environment.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/cmake.check_cache" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/feature_tests.c" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/feature_tests.cxx" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/mempool/output/TestMempool.dir/CXX.includecache" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/mempool/output/TestMempool.dir/DependInfo.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/mempool/output/TestMempool.dir/build.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/mempool/output/TestMempool.dir/cmake_clean.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/mempool/output/TestMempool.dir/depend.internal" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/mempool/output/TestMempool.dir/depend.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/mempool/output/TestMempool.dir/flags.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/mempool/output/TestMempool.dir/link.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/mempool/output/TestMempool.dir/progress.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/output/gtest_test.dir/CXX.includecache" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/output/gtest_test.dir/DependInfo.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/output/gtest_test.dir/build.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/output/gtest_test.dir/cmake_clean.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/output/gtest_test.dir/depend.internal" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/output/gtest_test.dir/depend.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/output/gtest_test.dir/flags.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/output/gtest_test.dir/link.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/output/gtest_test.dir/progress.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/progress.marks" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/threadpool/output/TestThreadpool.dir/CXX.includecache" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/threadpool/output/TestThreadpool.dir/DependInfo.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/threadpool/output/TestThreadpool.dir/build.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/threadpool/output/TestThreadpool.dir/cmake_clean.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/threadpool/output/TestThreadpool.dir/depend.internal" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/threadpool/output/TestThreadpool.dir/depend.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/threadpool/output/TestThreadpool.dir/flags.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/threadpool/output/TestThreadpool.dir/link.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeFiles/threadpool/output/TestThreadpool.dir/progress.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/CMakeLists.txt_bak_new" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeCache.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.8.2/CMakeCCompiler.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.8.2/CMakeCXXCompiler.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.8.2/CMakeSystem.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/CMakeDirectoryInformation.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/CMakeOutput.log" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Makefile.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Makefile2" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Progress/12" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Progress/17" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Progress/8" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Progress/9" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Progress/count.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/TargetDirectories.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-environment.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-log.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/cmake.check_cache" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/feature_tests.c" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/feature_tests.cxx" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/mempool/output/TestMempool.dir/CXX.includecache" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/mempool/output/TestMempool.dir/DependInfo.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/mempool/output/TestMempool.dir/build.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/mempool/output/TestMempool.dir/cmake_clean.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/mempool/output/TestMempool.dir/depend.internal" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/mempool/output/TestMempool.dir/depend.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/mempool/output/TestMempool.dir/flags.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/mempool/output/TestMempool.dir/link.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/mempool/output/TestMempool.dir/progress.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/output/gtest_test.dir/CXX.includecache" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/output/gtest_test.dir/DependInfo.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/output/gtest_test.dir/build.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/output/gtest_test.dir/cmake_clean.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/output/gtest_test.dir/depend.internal" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/output/gtest_test.dir/depend.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/output/gtest_test.dir/flags.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/output/gtest_test.dir/link.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/output/gtest_test.dir/progress.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/progress.marks" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/threadpool/output/TestThreadpool.dir/CXX.includecache" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/threadpool/output/TestThreadpool.dir/DependInfo.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/threadpool/output/TestThreadpool.dir/build.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/threadpool/output/TestThreadpool.dir/cmake_clean.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/threadpool/output/TestThreadpool.dir/depend.internal" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/threadpool/output/TestThreadpool.dir/depend.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/threadpool/output/TestThreadpool.dir/flags.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/threadpool/output/TestThreadpool.dir/link.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/threadpool/output/TestThreadpool.dir/progress.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/Project.cbp" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/cmake_install.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/CMakeFiles/CMakeDirectoryInformation.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/CMakeFiles/progress.marks" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/CTestTestfile.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/cmake_install.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/CMakeFiles/CMakeDirectoryInformation.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/CMakeFiles/gmock.dir/DependInfo.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/CMakeFiles/gmock.dir/build.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/CMakeFiles/gmock.dir/cmake_clean.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/CMakeFiles/gmock.dir/cmake_clean_target.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/CMakeFiles/gmock.dir/depend.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/CMakeFiles/gmock.dir/flags.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/CMakeFiles/gmock.dir/link.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/CMakeFiles/gmock.dir/progress.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/CMakeFiles/gmock_main.dir/DependInfo.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/CMakeFiles/gmock_main.dir/build.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/CMakeFiles/gmock_main.dir/cmake_clean.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/CMakeFiles/gmock_main.dir/cmake_clean_target.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/CMakeFiles/gmock_main.dir/depend.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/CMakeFiles/gmock_main.dir/flags.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/CMakeFiles/gmock_main.dir/link.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/CMakeFiles/gmock_main.dir/progress.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/CMakeFiles/progress.marks" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/CTestTestfile.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/cmake_install.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gmock.cbp" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gtest/CMakeFiles/CMakeDirectoryInformation.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gtest/CMakeFiles/gtest.dir/CXX.includecache" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gtest/CMakeFiles/gtest.dir/DependInfo.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gtest/CMakeFiles/gtest.dir/build.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gtest/CMakeFiles/gtest.dir/cmake_clean.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gtest/CMakeFiles/gtest.dir/cmake_clean_target.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gtest/CMakeFiles/gtest.dir/depend.internal" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gtest/CMakeFiles/gtest.dir/depend.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gtest/CMakeFiles/gtest.dir/flags.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gtest/CMakeFiles/gtest.dir/link.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gtest/CMakeFiles/gtest.dir/progress.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gtest/CMakeFiles/gtest_main.dir/CXX.includecache" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gtest/CMakeFiles/gtest_main.dir/DependInfo.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gtest/CMakeFiles/gtest_main.dir/build.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gtest/CMakeFiles/gtest_main.dir/cmake_clean.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gtest/CMakeFiles/gtest_main.dir/cmake_clean_target.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gtest/CMakeFiles/gtest_main.dir/depend.internal" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gtest/CMakeFiles/gtest_main.dir/depend.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gtest/CMakeFiles/gtest_main.dir/flags.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gtest/CMakeFiles/gtest_main.dir/link.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gtest/CMakeFiles/gtest_main.dir/progress.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gtest/CMakeFiles/progress.marks" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gtest/CTestTestfile.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gtest/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gtest/cmake_install.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googlemock/gtest/gtest.cbp" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-build/googletest-distribution.cbp" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/CMakeCache.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/CMakeFiles/3.8.2/CMakeSystem.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/CMakeFiles/CMakeDirectoryInformation.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/CMakeFiles/CMakeOutput.log" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/CMakeFiles/CMakeRuleHashes.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/CMakeFiles/Makefile.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/CMakeFiles/Makefile2" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/CMakeFiles/TargetDirectories.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/CMakeFiles/cmake.check_cache" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/CMakeFiles/googletest.dir/DependInfo.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/CMakeFiles/googletest.dir/Labels.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/CMakeFiles/googletest.dir/Labels.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/CMakeFiles/googletest.dir/build.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/CMakeFiles/googletest.dir/cmake_clean.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/CMakeFiles/googletest.dir/depend.internal" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/CMakeFiles/googletest.dir/depend.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/CMakeFiles/googletest.dir/progress.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/CMakeFiles/progress.marks" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/CMakeLists.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/cmake_install.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/googletest-prefix/src/googletest-stamp/googletest-gitclone-lastrun.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/googletest-prefix/src/googletest-stamp/googletest-gitinfo.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/googletest-prefix/tmp/googletest-cfgcmd.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/googletest-prefix/tmp/googletest-cfgcmd.txt.in" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/googletest-prefix/tmp/googletest-gitclone.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake-build-debug/thirdparty/googletest-download/googletest-prefix/tmp/googletest-gitupdate.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/cmake_install.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/CMakeCache.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/CMakeFiles/3.8.2/CMakeCCompiler.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/CMakeFiles/3.8.2/CMakeCXXCompiler.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/CMakeFiles/3.8.2/CMakeSystem.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/CMakeFiles/CMakeDirectoryInformation.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/CMakeFiles/CMakeOutput.log" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/CMakeFiles/Makefile.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/CMakeFiles/Makefile2" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/CMakeFiles/TargetDirectories.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/CMakeFiles/cmake.check_cache" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/CMakeFiles/feature_tests.c" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/CMakeFiles/feature_tests.cxx" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/CMakeFiles/progress.marks" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/CMakeLists.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/CTestTestfile.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/appveyor.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/cmake_install.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CHANGES" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CMakeFiles/CMakeDirectoryInformation.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CMakeFiles/gmock.dir/CXX.includecache" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CMakeFiles/gmock.dir/DependInfo.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CMakeFiles/gmock.dir/build.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CMakeFiles/gmock.dir/cmake_clean.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CMakeFiles/gmock.dir/cmake_clean_target.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CMakeFiles/gmock.dir/depend.internal" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CMakeFiles/gmock.dir/depend.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CMakeFiles/gmock.dir/flags.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CMakeFiles/gmock.dir/link.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CMakeFiles/gmock.dir/progress.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CMakeFiles/gmock_main.dir/CXX.includecache" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CMakeFiles/gmock_main.dir/DependInfo.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CMakeFiles/gmock_main.dir/build.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CMakeFiles/gmock_main.dir/cmake_clean.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CMakeFiles/gmock_main.dir/cmake_clean_target.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CMakeFiles/gmock_main.dir/depend.internal" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CMakeFiles/gmock_main.dir/depend.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CMakeFiles/gmock_main.dir/flags.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CMakeFiles/gmock_main.dir/link.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CMakeFiles/gmock_main.dir/progress.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CMakeFiles/progress.marks" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CMakeLists.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CONTRIBUTORS" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/CTestTestfile.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/Makefile.am" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/cmake_install.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/configure.ac" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/docs/CheatSheet.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/docs/CookBook.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/docs/DesignDoc.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/docs/DevGuide.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/docs/Documentation.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/docs/ForDummies.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/docs/FrequentlyAskedQuestions.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/docs/KnownIssues.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/docs/v1_5/CheatSheet.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/docs/v1_5/CookBook.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/docs/v1_5/Documentation.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/docs/v1_5/ForDummies.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/docs/v1_5/FrequentlyAskedQuestions.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/docs/v1_6/CheatSheet.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/docs/v1_6/CookBook.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/docs/v1_6/Documentation.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/docs/v1_6/ForDummies.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/docs/v1_6/FrequentlyAskedQuestions.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/docs/v1_7/CheatSheet.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/docs/v1_7/CookBook.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/docs/v1_7/Documentation.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/docs/v1_7/ForDummies.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/docs/v1_7/FrequentlyAskedQuestions.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gmock.cbp" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gtest/CMakeFiles/CMakeDirectoryInformation.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gtest/CMakeFiles/gtest.dir/CXX.includecache" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gtest/CMakeFiles/gtest.dir/DependInfo.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gtest/CMakeFiles/gtest.dir/build.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gtest/CMakeFiles/gtest.dir/cmake_clean.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gtest/CMakeFiles/gtest.dir/cmake_clean_target.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gtest/CMakeFiles/gtest.dir/depend.internal" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gtest/CMakeFiles/gtest.dir/depend.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gtest/CMakeFiles/gtest.dir/flags.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gtest/CMakeFiles/gtest.dir/link.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gtest/CMakeFiles/gtest.dir/progress.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gtest/CMakeFiles/gtest_main.dir/CXX.includecache" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gtest/CMakeFiles/gtest_main.dir/DependInfo.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gtest/CMakeFiles/gtest_main.dir/build.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gtest/CMakeFiles/gtest_main.dir/cmake_clean.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gtest/CMakeFiles/gtest_main.dir/cmake_clean_target.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gtest/CMakeFiles/gtest_main.dir/depend.internal" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gtest/CMakeFiles/gtest_main.dir/depend.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gtest/CMakeFiles/gtest_main.dir/flags.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gtest/CMakeFiles/gtest_main.dir/link.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gtest/CMakeFiles/gtest_main.dir/progress.make" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gtest/CMakeFiles/progress.marks" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gtest/CTestTestfile.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gtest/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gtest/cmake_install.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/gtest/gtest.cbp" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/include/gmock/gmock-actions.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/include/gmock/gmock-cardinalities.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/include/gmock/gmock-generated-actions.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/include/gmock/gmock-generated-actions.h.pump" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/include/gmock/gmock-generated-function-mockers.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/include/gmock/gmock-generated-function-mockers.h.pump" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/include/gmock/gmock-generated-matchers.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/include/gmock/gmock-generated-matchers.h.pump" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/include/gmock/gmock-generated-nice-strict.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/include/gmock/gmock-generated-nice-strict.h.pump" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/include/gmock/gmock-matchers.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/include/gmock/gmock-more-actions.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/include/gmock/gmock-more-matchers.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/include/gmock/gmock-spec-builders.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/include/gmock/gmock.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/include/gmock/internal/custom/gmock-generated-actions.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/include/gmock/internal/custom/gmock-generated-actions.h.pump" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/include/gmock/internal/custom/gmock-matchers.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/include/gmock/internal/custom/gmock-port.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/include/gmock/internal/gmock-generated-internal-utils.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/include/gmock/internal/gmock-generated-internal-utils.h.pump" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/include/gmock/internal/gmock-internal-utils.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/include/gmock/internal/gmock-port.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/make/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/msvc/2005/gmock.sln" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/msvc/2005/gmock.vcproj" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/msvc/2005/gmock_config.vsprops" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/msvc/2005/gmock_main.vcproj" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/msvc/2005/gmock_test.vcproj" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/msvc/2010/gmock.sln" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/msvc/2010/gmock.vcxproj" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/msvc/2010/gmock_config.props" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/msvc/2010/gmock_main.vcxproj" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/msvc/2010/gmock_test.vcxproj" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/msvc/2015/gmock.sln" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/msvc/2015/gmock.vcxproj" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/msvc/2015/gmock_config.props" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/msvc/2015/gmock_main.vcxproj" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/msvc/2015/gmock_test.vcxproj" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/scripts/fuse_gmock_files.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/scripts/generator/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/scripts/generator/README" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/scripts/generator/README.cppclean" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/scripts/generator/cpp/__init__.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/scripts/generator/cpp/ast.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/scripts/generator/cpp/gmock_class.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/scripts/generator/cpp/gmock_class_test.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/scripts/generator/cpp/keywords.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/scripts/generator/cpp/tokenize.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/scripts/generator/cpp/utils.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/scripts/generator/gmock_gen.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/scripts/gmock-config.in" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/scripts/gmock_doctor.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/scripts/upload.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/scripts/upload_gmock.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/src/gmock-all.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/src/gmock-cardinalities.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/src/gmock-internal-utils.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/src/gmock-matchers.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/src/gmock-spec-builders.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/src/gmock.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/src/gmock_main.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/test/gmock-actions_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/test/gmock-cardinalities_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/test/gmock-generated-actions_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/test/gmock-generated-function-mockers_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/test/gmock-generated-internal-utils_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/test/gmock-generated-matchers_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/test/gmock-internal-utils_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/test/gmock-matchers_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/test/gmock-more-actions_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/test/gmock-nice-strict_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/test/gmock-port_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/test/gmock-spec-builders_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/test/gmock_all_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/test/gmock_ex_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/test/gmock_leak_test.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/test/gmock_leak_test_.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/test/gmock_link2_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/test/gmock_link_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/test/gmock_link_test.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/test/gmock_output_test.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/test/gmock_output_test_.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/test/gmock_output_test_golden.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/test/gmock_stress_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/test/gmock_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googlemock/test/gmock_test_utils.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest-distribution.cbp" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/.gitignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/CHANGES" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/CMakeLists.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/CONTRIBUTORS" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/Makefile.am" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/cmake/internal_utils.cmake" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/codegear/gtest.cbproj" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/codegear/gtest.groupproj" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/codegear/gtest_all.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/codegear/gtest_link.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/codegear/gtest_main.cbproj" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/codegear/gtest_unittest.cbproj" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/configure.ac" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/docs/AdvancedGuide.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/docs/DevGuide.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/docs/Documentation.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/docs/FAQ.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/docs/Primer.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/docs/PumpManual.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/docs/Samples.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/docs/V1_5_AdvancedGuide.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/docs/V1_5_Documentation.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/docs/V1_5_FAQ.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/docs/V1_5_Primer.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/docs/V1_5_PumpManual.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/docs/V1_5_XcodeGuide.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/docs/V1_6_AdvancedGuide.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/docs/V1_6_Documentation.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/docs/V1_6_FAQ.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/docs/V1_6_Primer.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/docs/V1_6_PumpManual.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/docs/V1_6_Samples.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/docs/V1_6_XcodeGuide.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/docs/V1_7_AdvancedGuide.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/docs/V1_7_Documentation.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/docs/V1_7_FAQ.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/docs/V1_7_Primer.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/docs/V1_7_PumpManual.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/docs/V1_7_Samples.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/docs/V1_7_XcodeGuide.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/docs/XcodeGuide.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/include/gtest/gtest-death-test.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/include/gtest/gtest-message.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/include/gtest/gtest-param-test.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/include/gtest/gtest-param-test.h.pump" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/include/gtest/gtest-printers.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/include/gtest/gtest-spi.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/include/gtest/gtest-test-part.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/include/gtest/gtest-typed-test.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/include/gtest/gtest.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/include/gtest/gtest_pred_impl.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/include/gtest/gtest_prod.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/include/gtest/internal/custom/gtest-port.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/include/gtest/internal/custom/gtest-printers.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/include/gtest/internal/custom/gtest.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/include/gtest/internal/gtest-death-test-internal.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/include/gtest/internal/gtest-filepath.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/include/gtest/internal/gtest-internal.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/include/gtest/internal/gtest-linked_ptr.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/include/gtest/internal/gtest-param-util-generated.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/include/gtest/internal/gtest-param-util-generated.h.pump" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/include/gtest/internal/gtest-param-util.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/include/gtest/internal/gtest-port-arch.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/include/gtest/internal/gtest-port.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/include/gtest/internal/gtest-string.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/include/gtest/internal/gtest-tuple.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/include/gtest/internal/gtest-tuple.h.pump" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/include/gtest/internal/gtest-type-util.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/include/gtest/internal/gtest-type-util.h.pump" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/m4/acx_pthread.m4" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/m4/gtest.m4" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/make/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/msvc/gtest-md.sln" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/msvc/gtest-md.vcproj" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/msvc/gtest.sln" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/msvc/gtest.vcproj" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/msvc/gtest_main-md.vcproj" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/msvc/gtest_main.vcproj" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/msvc/gtest_prod_test-md.vcproj" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/msvc/gtest_prod_test.vcproj" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/msvc/gtest_unittest-md.vcproj" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/msvc/gtest_unittest.vcproj" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/samples/prime_tables.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/samples/sample1.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/samples/sample1.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/samples/sample10_unittest.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/samples/sample1_unittest.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/samples/sample2.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/samples/sample2.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/samples/sample2_unittest.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/samples/sample3-inl.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/samples/sample3_unittest.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/samples/sample4.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/samples/sample4.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/samples/sample4_unittest.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/samples/sample5_unittest.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/samples/sample6_unittest.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/samples/sample7_unittest.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/samples/sample8_unittest.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/samples/sample9_unittest.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/scripts/common.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/scripts/fuse_gtest_files.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/scripts/gen_gtest_pred_impl.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/scripts/gtest-config.in" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/scripts/pump.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/scripts/release_docs.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/scripts/test/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/scripts/upload.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/scripts/upload_gtest.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/src/gtest-all.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/src/gtest-death-test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/src/gtest-filepath.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/src/gtest-internal-inl.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/src/gtest-port.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/src/gtest-printers.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/src/gtest-test-part.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/src/gtest-typed-test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/src/gtest.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/src/gtest_main.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest-death-test_ex_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest-death-test_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest-filepath_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest-linked_ptr_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest-listener_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest-message_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest-options_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest-param-test2_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest-param-test_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest-param-test_test.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest-port_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest-printers_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest-test-part_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest-tuple_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest-typed-test2_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest-typed-test_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest-typed-test_test.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest-unittest-api_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_all_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_break_on_failure_unittest.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_break_on_failure_unittest_.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_catch_exceptions_test.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_catch_exceptions_test_.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_color_test.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_color_test_.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_env_var_test.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_env_var_test_.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_environment_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_filter_unittest.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_filter_unittest_.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_help_test.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_help_test_.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_list_tests_unittest.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_list_tests_unittest_.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_main_unittest.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_no_test_unittest.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_output_test.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_output_test_.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_output_test_golden_lin.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_pred_impl_unittest.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_premature_exit_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_prod_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_repeat_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_shuffle_test.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_shuffle_test_.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_sole_header_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_stress_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_test_utils.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_throw_on_failure_ex_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_throw_on_failure_test.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_throw_on_failure_test_.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_uninitialized_test.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_uninitialized_test_.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_unittest.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_xml_outfile1_test_.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_xml_outfile2_test_.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_xml_outfiles_test.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_xml_output_unittest.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_xml_output_unittest_.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/gtest_xml_test_utils.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/production.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/test/production.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/xcode/Config/DebugProject.xcconfig" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/xcode/Config/FrameworkTarget.xcconfig" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/xcode/Config/General.xcconfig" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/xcode/Config/ReleaseProject.xcconfig" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/xcode/Config/StaticLibraryTarget.xcconfig" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/xcode/Config/TestTarget.xcconfig" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/xcode/Resources/Info.plist" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/xcode/Samples/FrameworkSample/Info.plist" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/xcode/Samples/FrameworkSample/WidgetFramework.xcodeproj/project.pbxproj" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/xcode/Samples/FrameworkSample/runtests.sh" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/xcode/Samples/FrameworkSample/widget.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/xcode/Samples/FrameworkSample/widget.h" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/xcode/Samples/FrameworkSample/widget_test.cc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/xcode/Scripts/runtests.sh" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/xcode/Scripts/versiongenerate.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/googletest/xcode/gtest.xcodeproj/project.pbxproj" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/thirdparty/travis.sh" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mempool/output/TestMempool" afterPath="$PROJECT_DIR$/mempool/output/TestMempool" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/output/gtest_test" afterPath="$PROJECT_DIR$/output/gtest_test" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/threadpool/output/TestThreadpool" afterPath="$PROJECT_DIR$/threadpool/output/TestThreadpool" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/CMakeLists.txt" afterPath="$PROJECT_DIR$/CMakeLists.txt" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/Makefile" afterPath="$PROJECT_DIR$/Makefile" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/Project.cbp" afterPath="$PROJECT_DIR$/Project.cbp" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/thirdparty/README.md" afterPath="$PROJECT_DIR$/thirdparty/README.md" />
    </list>
    <ignored path="$PROJECT_DIR$/CMakeFiles/" />
    <ignored path="$PROJECT_DIR$/cmake-build-debug/" />
    <ignored path="$PROJECT_DIR$/thirdparty/googlemock/CMakeFiles/" />
    <ignored path="$PROJECT_DIR$/thirdparty/CMakeFiles/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FavoritesManager">
    <favorites_list name="valois" />
  </component>
  <component name="FileEditorManager">
    <leaf>
      <file leaf-file-name="CMakeLists.txt" pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/CMakeLists.txt">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="115">
              <caret line="5" column="19" lean-forward="false" selection-start-line="5" selection-start-column="19" selection-end-line="5" selection-end-column="19" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/test/unittest/gtest_test.cpp" />
        <option value="$PROJECT_DIR$/net/src/poller.h" />
        <option value="$PROJECT_DIR$/net/src/poller.cpp" />
        <option value="$PROJECT_DIR$/README.md" />
        <option value="$PROJECT_DIR$/.travis.yml" />
        <option value="$PROJECT_DIR$/thirdparty/README.md" />
        <option value="$PROJECT_DIR$/CMakeLists.txt" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds" fullScreen="true">
    <option name="width" value="1280" />
    <option name="height" value="800" />
  </component>
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
      <manualOrder />
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="valois" type="dad4c3:CidrFilesViewHelper$MyProjectTreeStructure$1" />
              <item name="valois" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="valois" type="dad4c3:CidrFilesViewHelper$MyProjectTreeStructure$1" />
              <item name="valois" type="462c0819:PsiDirectoryNode" />
              <item name="thirdparty" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="valois" type="dad4c3:CidrFilesViewHelper$MyProjectTreeStructure$1" />
              <item name="valois" type="462c0819:PsiDirectoryNode" />
              <item name="threadpool" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="settings.editor.selected.configurable" value="CMakeSettings" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/thirdparty" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/test" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Google Test.output/gtest_test">
    <configuration name="Build All" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" EXPLICIT_BUILD_TARGET_NAME="all">
      <envs />
    </configuration>
    <configuration name="gmock" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="gmock" CONFIG_NAME="Debug">
      <envs />
    </configuration>
    <configuration name="gmock_main" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="gmock_main" CONFIG_NAME="Debug">
      <envs />
    </configuration>
    <configuration name="gtest" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="gtest" CONFIG_NAME="Debug">
      <envs />
    </configuration>
    <configuration name="gtest_main" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="gtest_main" CONFIG_NAME="Debug">
      <envs />
    </configuration>
    <configuration name="mempool/output/TestMempool" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="mempool/output/TestMempool" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="mempool/output/TestMempool">
      <envs />
    </configuration>
    <configuration name="output/gtest_test" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="output/gtest_test" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="output/gtest_test" TEST_MODE="SUITE_TEST">
      <envs />
    </configuration>
    <configuration name="threadpool/output/TestThreadpool" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="threadpool/output/TestThreadpool" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="threadpool/output/TestThreadpool">
      <envs />
    </configuration>
    <list size="8">
      <item index="0" class="java.lang.String" itemvalue="Application.Build All" />
      <item index="1" class="java.lang.String" itemvalue="Application.mempool/output/TestMempool" />
      <item index="2" class="java.lang.String" itemvalue="Google Test.output/gtest_test" />
      <item index="3" class="java.lang.String" itemvalue="Application.threadpool/output/TestThreadpool" />
      <item index="4" class="java.lang.String" itemvalue="Application.gmock" />
      <item index="5" class="java.lang.String" itemvalue="Application.gmock_main" />
      <item index="6" class="java.lang.String" itemvalue="Application.gtest" />
      <item index="7" class="java.lang.String" itemvalue="Application.gtest_main" />
    </list>
  </component>
  <component name="ShelveChangesManager" show_recycled="false">
    <option name="remove_strategy" value="false" />
  </component>
  <component name="TestHistory">
    <history-entry file="output_gtest_test - 2017.07.27 at 22h 33m 25s.xml">
      <configuration name="output/gtest_test" configurationId="CMakeGoogleTestRunConfigurationType" />
    </history-entry>
    <history-entry file="output_gtest_test - 2017.07.27 at 22h 37m 13s.xml">
      <configuration name="output/gtest_test" configurationId="CMakeGoogleTestRunConfigurationType" />
    </history-entry>
    <history-entry file="output_gtest_test - 2017.07.28 at 11h 19m 20s.xml">
      <configuration name="output/gtest_test" configurationId="CMakeGoogleTestRunConfigurationType" />
    </history-entry>
  </component>
  <component name="TodoView" selected-index="3">
    <todo-panel id="selected-file">
      <is-autoscroll-to-source value="true" />
    </todo-panel>
    <todo-panel id="all">
      <are-packages-shown value="true" />
      <is-autoscroll-to-source value="true" />
    </todo-panel>
  </component>
  <component name="ToolWindowManager">
    <frame x="0" y="0" width="1280" height="800" extended-state="0" />
    <layout>
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.23021002" sideWeight="0.4939577" order="0" side_tool="false" content_ui="combo" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.328125" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Messages" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.3252841" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="CMake" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.18892045" sideWeight="0.4978701" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33028457" sideWeight="0.5021299" order="7" side_tool="true" content_ui="tabs" />
      <window_info id="Version Control" active="true" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.328125" sideWeight="0.4978701" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32670453" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.24920128" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.17625134" sideWeight="0.5060423" order="2" side_tool="true" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.39939025" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Data View" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32960597" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32954547" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
    </layout>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="RECENTLY_FILTERED_USER_GROUPS">
                <collection />
              </option>
              <option name="RECENTLY_FILTERED_BRANCH_GROUPS">
                <collection />
              </option>
              <option name="COLUMN_ORDER">
                <list>
                  <option value="0" />
                  <option value="1" />
                  <option value="2" />
                  <option value="3" />
                </list>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Use Clion for valois project, it works well after adding the CMakeLists.txt. Adjust the test files path." />
    <MESSAGE value="add travis ci file" />
    <MESSAGE value="update travis ci file" />
    <MESSAGE value="Adding travis-ci result in README.md" />
    <MESSAGE value="update travis-ci file and update all gtest files" />
    <MESSAGE value="delete thirdparty libs" />
    <option name="LAST_COMMIT_MESSAGE" value="delete thirdparty libs" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager />
    <watches-manager />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/net/src/poller.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="115">
          <caret line="5" column="0" lean-forward="true" selection-start-line="5" selection-start-column="0" selection-end-line="5" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/net/src/event_handler.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/net/src/poller.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="552">
          <caret line="24" column="2" lean-forward="true" selection-start-line="24" selection-start-column="2" selection-end-line="24" selection-end-column="2" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mempool/src/mempool.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="92">
          <caret line="4" column="0" lean-forward="false" selection-start-line="4" selection-start-column="0" selection-end-line="5" selection-end-column="18" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/test.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/test.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/unittest/gtest_test.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="23">
          <caret line="1" column="19" lean-forward="false" selection-start-line="1" selection-start-column="15" selection-end-line="1" selection-end-column="19" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/CMakeLists.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="644">
          <caret line="28" column="58" lean-forward="true" selection-start-line="28" selection-start-column="58" selection-end-line="28" selection-end-column="58" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/base/thread_safe_queue.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/threadpool/src/threadpool.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-346">
          <caret line="17" column="22" lean-forward="true" selection-start-line="17" selection-start-column="22" selection-end-line="17" selection-end-column="22" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/threadpool/example/TestThreadpool.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="161">
          <caret line="7" column="21" lean-forward="false" selection-start-line="7" selection-start-column="21" selection-end-line="7" selection-end-column="21" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/unittest/gtest_test.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="23">
          <caret line="1" column="19" lean-forward="false" selection-start-line="1" selection-start-column="15" selection-end-line="1" selection-end-column="19" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/test.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/test.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/thirdparty/googletest-src/googletest/include/gtest/gtest.h" />
    <entry file="file://$PROJECT_DIR$/mempool/src/mempool.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="46">
          <caret line="4" column="0" lean-forward="false" selection-start-line="4" selection-start-column="0" selection-end-line="5" selection-end-column="18" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/net/src/poller.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="552">
          <caret line="24" column="2" lean-forward="false" selection-start-line="24" selection-start-column="2" selection-end-line="24" selection-end-column="2" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/net/src/event_handler.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/net/src/poller.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="115">
          <caret line="5" column="0" lean-forward="false" selection-start-line="5" selection-start-column="0" selection-end-line="5" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/README.md">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="46">
          <caret line="2" column="15" lean-forward="false" selection-start-line="2" selection-start-column="15" selection-end-line="2" selection-end-column="15" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/thirdparty/googletest-src/CMakeLists.txt" />
    <entry file="file://$PROJECT_DIR$/thirdparty/googletest-src/.travis.yml" />
    <entry file="file://$PROJECT_DIR$/thirdparty/README.md">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="40" lean-forward="false" selection-start-line="0" selection-start-column="40" selection-end-line="0" selection-end-column="40" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/.travis.yml">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="368">
          <caret line="16" column="25" lean-forward="false" selection-start-line="16" selection-start-column="25" selection-end-line="16" selection-end-column="25" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/configure">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/CMakeLists.txt.gtest">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="18" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Makefile">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-1357">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/CMakeLists.txt.in">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/thirdparty/CMakeLists.txt_bak">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/CMakeLists.txt_bak_new">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/thirdparty/CMakeLists.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="276">
          <caret line="12" column="18" lean-forward="false" selection-start-line="12" selection-start-column="2" selection-end-line="12" selection-end-column="18" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/CMakeLists.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="115">
          <caret line="5" column="19" lean-forward="false" selection-start-line="5" selection-start-column="19" selection-end-line="5" selection-end-column="19" />
          <folding />
        </state>
      </provider>
    </entry>
  </component>
</project>